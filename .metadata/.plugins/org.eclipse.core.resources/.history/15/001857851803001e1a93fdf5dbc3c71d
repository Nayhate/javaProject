package principal.modelos;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import principal.controladores.ControleAcesso;
import principal.controladores.ControleVenda;
import principal.dao.Banco;
import principal.util.Prompt;

@Entity
public class Venda {

	public static Venda emMemoria;
	
	public enum Status {
		ABERTO,
		CONCLUIDO,
		CANCELADO
	}
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	private LocalDateTime data;
	private double total;
	private Status status;
	
	@ManyToOne
	private Funcionario funcionario;
	
	@OneToMany
	private List<Produto> produtos;
	
	public Venda() {
		this.setStatus(Status.ABERTO);
		this.funcionario = ControleAcesso.usuarioLogado;
		this.produtos = new ArrayList<>();
		this.data = LocalDateTime.now();
		this.total = 0;
	}
	
	public Venda(Funcionario funcionario) {
		this();
		this.funcionario = funcionario;
	}
	
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public LocalDateTime getData() {
		return data;
	}

	public Funcionario getFuncionario() {
		return funcionario;
	}

	public void setFuncionario(Funcionario funcionario) {
		this.funcionario = funcionario;
	}
	
	public String getDataLonga() {
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
		return data.format(dtf);
	}
	
	public String getDataCurta() {
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
		return data.format(dtf);
	}

	public void setData(LocalDateTime data) {
		this.data = data;
	}
	
	public void setData(int dia, int mes, int ano, int hora, int minuto) {
		this.data = LocalDateTime.of(ano, mes, dia, hora, minuto);
	}
	
	public double getTotal() {
		return total;
	}

	public void setTotal(double total) {
		this.total = total;
	}
	
	public void adicionar(Produto produto) {
		this.total += produto.getPreco();
		this.produtos.add(produto);
	}
	
	public void remover(Produto produto) {
		this.total -= produto.getPreco();
		this.produtos.remove(produto);
	}

	public List<Produto> getProdutos() {
		return produtos;
	}

	public void setProdutos(List<Produto> produtos) {
		this.produtos = produtos;
	}

	public Status getStatus() {
		return status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}
	
	@Override
	public String toString() {
		return "Pedido {id = "+ id + ", status = "+ status + ", data = " + getDataCurta() + ", total = " + total 
				+ ", " + funcionario 
				+ ", " + produtos + "}";
	}
}


